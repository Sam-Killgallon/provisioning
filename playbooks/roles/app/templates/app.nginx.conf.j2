upstream puma {
  server unix:///var/www/{{ app.name }}/shared/tmp/sockets/puma.sock;
}

server {
{% if use_ssl|default(false) %}
  # Handle HTTP versions of primary and aliases
  server_name {{ app.primary_domain_name }} {{ app.alias_domain_names|join(" ") }};
  return 301 https://{{ app.primary_domain_name }}$request_uri;
{% else %}
  #Â Handle HTTP versions of aliases (Not primary as this could keep redirecting back to itself?)
  server_name {{ app.alias_domain_names|join(" ") }};
  return 301 http://{{ app.primary_domain_name }}$request_uri;
{% endif %}
}


{% if use_ssl|default(false) %}
# Handle HTTPS versions of aliases
server {
  listen 443 ssl;
  ssl_certificate /etc/letsencrypt/live/{{ app.primary_domain_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ app.primary_domain_name }}/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  server_name {{ app.alias_domain_names|join(" ") }};
  return 301 https://{{ app.primary_domain_name }}$request_uri;
}
{% endif %}

server {
  server_name {{ app.primary_domain_name }};

  root /var/www/{{ app.name }}/current/public;
  access_log /var/www/{{ app.name }}/current/log/nginx.access.log;
  error_log /var/www/{{ app.name }}/current/log/nginx.error.log info;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 10M;
  keepalive_timeout 10;

{% if use_ssl|default(false) %}
  # Handle HTTPS version of primary
  listen 443 ssl;
  ssl_certificate /etc/letsencrypt/live/{{ app.primary_domain_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ app.primary_domain_name }}/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
{% else %}
  # Handle HTTP version of primary
  listen 80;
{% endif %}
}
